#!/usr/bin/python
import sys
import getopt
import socket
import time

def usage():
    print 'Usage: send_request [-h|--help] -p|--protocol <n2h2|websense> [-a|--alive] [-u|--url <url>]'

def send_alive(s, protocol):
    if protocol == 'n2h2':
        print 'Sending alive request'
        alive = '\x02\x03\x01\x02\x02\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
        s.sendall(alive)
        data = s.recv(256)
        print 'Received', repr(data)
    else:
        print 'Sending alive request'
        alive = '\x00\x0c\x00\x81\x00\x01\x00\x00\x02\x0a\x09\x09'
        s.sendall(alive)
        data = s.recv(256)
        print 'Received', repr(data)

def send_url(s, protocol, url):
    if protocol == 'n2h2':
        print 'Sending url request: %s' % url
        hdr = '\x02\x00\x01\x01\x01\x01'
        srcip = [192, 168, 0, 1]
        destip = [192, 168, 100, 1]
        url_req = hdr
        for chars in srcip:
            url_req += chr(chars)
        for chars in destip:
            url_req += chr(chars)
        len1 = len(url) / 256
        len2 = len(url) % 256
        url_req += chr(len1)
        url_req += chr(len2)
        url_req += '\x00\x00'
        url_req += str(url)
        url_req += '\x00'
        s.sendall(url_req)
        data = s.recv(1024)
        print 'Received', repr(data)
    else:
        print 'Sending url request: %s' % url
        len1 = (26+len(url)) / 256
        len2 = (26+len(url)) % 256
        url_req = chr(len1)
        url_req += chr(len2)
        url_req += '\x00\x80\x00\x01\x00\x00\x04\x01\x02\x05\x00\x01\x00\x00'
        srcip = [192, 168, 0, 1]
        destip = [192, 168, 100, 1]
        for chars in srcip:
            url_req += chr(chars)
        for chars in destip:
            url_req += chr(chars)
        len1 = len(url) / 256
        len2 = len(url) % 256
        url_req += chr(len1)
        url_req += chr(len2)
        url_req += str(url)
        s.sendall(url_req)
        data = s.recv(1024)
        print 'Received', repr(data)
        

def main():
    try:
        opts, args = getopt.getopt(sys.argv[1:], 'hp:au:', ['help', 'protocol', 'alive', 'url'])
    except getopt.GetoptError, err:
        print str(err)
        usage()
        sys.exit(1)

    protocol = ''
    alive = 0
    url = ''
    for o, a in opts:
        if o in ('-h', '--help'):
            usage()
            sys.exit()
        elif o in ('-p', '--protocol'):
            protocol = a
        elif o in ('-a', '--alive'):
            alive = 1
        elif o in ('-u', '--url'):
            url = a
        else:
            assert False, 'unhandled option'

    if (protocol != 'n2h2' and protocol != 'websense') or (alive == 0 and url == ''):
        usage()
        sys.exit()

    host = 'localhost'
    if protocol == 'n2h2':
        port = 4005
    else:
        port = 15868
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((host, port))

    if alive == 1:
        send_alive(s, protocol)
        send_alive(s, protocol)

    if url != '':
        send_url(s, protocol, url)
        send_url(s, protocol, url)

    s.close()


if __name__ == '__main__':
    main()

